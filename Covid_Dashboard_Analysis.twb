<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0324.2209                               -->
<workbook original-version='18.1' source-build='2022.1.0 (20221.22.0324.2209)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='Covid_Dashboard_Analysis_16497719237130' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (TableauTable1)' inline='true' name='federated.0cc4alg1q4nxxa0zxmzfk1kgew1r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableauTable1' name='excel-direct.1vkek4206773qv107ez8s1tjlyw3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Farzin/Desktop/project/Covid19/TableauTable1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1vkek4206773qv107ez8s1tjlyw3' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1vkek4206773qv107ez8s1tjlyw3' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A0EBD0BAD3A645E2A577FE96FAD367C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A0EBD0BAD3A645E2A577FE96FAD367C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A0EBD0BAD3A645E2A577FE96FAD367C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A0EBD0BAD3A645E2A577FE96FAD367C0]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Farzin/Desktop/project/Covid19/Tableau/Sheet1 (TableauTable1).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/12/2022 01:52:31 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet1 (TableauTable1)' increment-value='%null%' refresh-type='create' rows-inserted='1' timestamp-start='2022-04-12 13:52:30.376' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A0EBD0BAD3A645E2A577FE96FAD367C0'>
            <properties context=''>
              <relation connection='excel-direct.1vkek4206773qv107ez8s1tjlyw3' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (TableauTable2)' inline='true' name='federated.0gn98sz0ecm63n162fqrt029z2we' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableauTable2' name='excel-direct.1bvxcuh1xvx54x1dbrba71bcvq2q'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Farzin/Desktop/project/Covid19/TableauTable2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1bvxcuh1xvx54x1dbrba71bcvq2q' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='ContinentDeath' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1bvxcuh1xvx54x1dbrba71bcvq2q' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='ContinentDeath' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_89ECF56CB2DE42648EB110DBD97EFE44]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ContinentDeath</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ContinentDeath]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ContinentDeath</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_89ECF56CB2DE42648EB110DBD97EFE44]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Continent Death' datatype='integer' name='[ContinentDeath]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_89ECF56CB2DE42648EB110DBD97EFE44]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Farzin/Desktop/project/Covid19/Tableau/Sheet1 (TableauTable2).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/12/2022 01:53:08 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet1 (TableauTable2)' increment-value='%null%' refresh-type='create' rows-inserted='6' timestamp-start='2022-04-12 13:53:07.560' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ContinentDeath</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ContinentDeath]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ContinentDeath</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_89ECF56CB2DE42648EB110DBD97EFE44'>
            <properties context=''>
              <relation connection='excel-direct.1bvxcuh1xvx54x1dbrba71bcvq2q' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='ContinentDeath' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (TableauTable3)' inline='true' name='federated.0mqisty0957jm619bi98t01mgdoh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableauTable3' name='excel-direct.1aoi1q519z21yz14x5qwk02xn2wi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Farzin/Desktop/project/Covid19/TableauTable3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1aoi1q519z21yz14x5qwk02xn2wi' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D243:no:A1:D243:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PrecentagePopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1aoi1q519z21yz14x5qwk02xn2wi' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D243:no:A1:D243:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PrecentagePopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D243:no:A1:D243:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9115C4711214774BC959D9A67E489F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9115C4711214774BC959D9A67E489F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9115C4711214774BC959D9A67E489F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PrecentagePopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PrecentagePopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PrecentagePopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9115C4711214774BC959D9A67E489F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column caption='Precentage Population Infected' datatype='real' name='[PrecentagePopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_B9115C4711214774BC959D9A67E489F7]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Farzin/Desktop/project/Covid19/Tableau/Sheet1 (TableauTable3).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/12/2022 01:53:42 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet1 (TableauTable3)' increment-value='%null%' refresh-type='create' rows-inserted='242' timestamp-start='2022-04-12 13:53:41.773' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>241</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>229</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PrecentagePopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PrecentagePopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PrecentagePopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>228</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_B9115C4711214774BC959D9A67E489F7'>
            <properties context=''>
              <relation connection='excel-direct.1aoi1q519z21yz14x5qwk02xn2wi' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D243:no:A1:D243:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PrecentagePopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (TableauTable4)' inline='true' name='federated.1cbqao51jer18919ba06j09sbda6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableauTable4' name='excel-direct.0l7ei0h0fyegs019j56q918vc43n'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Farzin/Desktop/project/Covid19/TableauTable4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0l7ei0h0fyegs019j56q918vc43n' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PrecentagePopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0l7ei0h0fyegs019j56q918vc43n' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PrecentagePopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6B234D99D0D54EFFBE86B624562709A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6B234D99D0D54EFFBE86B624562709A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6B234D99D0D54EFFBE86B624562709A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6B234D99D0D54EFFBE86B624562709A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PrecentagePopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PrecentagePopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PrecentagePopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6B234D99D0D54EFFBE86B624562709A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column caption='Precentage Population Infected' datatype='real' name='[PrecentagePopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_6B234D99D0D54EFFBE86B624562709A5]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Farzin/Desktop/project/Covid19/Tableau/Sheet1 (TableauTable4).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/12/2022 01:54:39 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet1 (TableauTable4)' increment-value='%null%' refresh-type='create' rows-inserted='167198' timestamp-start='2022-04-12 13:54:13.760' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>350</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6B234D99D0D54EFFBE86B624562709A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>350</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6B234D99D0D54EFFBE86B624562709A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3976</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6B234D99D0D54EFFBE86B624562709A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35181</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6B234D99D0D54EFFBE86B624562709A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PrecentagePopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PrecentagePopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PrecentagePopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>65237</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6B234D99D0D54EFFBE86B624562709A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_6B234D99D0D54EFFBE86B624562709A5'>
            <properties context=''>
              <relation connection='excel-direct.0l7ei0h0fyegs019j56q918vc43n' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PrecentagePopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Case and Death</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TableauTable1)' name='federated.0cc4alg1q4nxxa0zxmzfk1kgew1r' />
          </datasources>
          <datasource-dependencies datasource='federated.0cc4alg1q4nxxa0zxmzfk1kgew1r'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cc4alg1q4nxxa0zxmzfk1kgew1r].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cc4alg1q4nxxa0zxmzfk1kgew1r].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cc4alg1q4nxxa0zxmzfk1kgew1r].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cc4alg1q4nxxa0zxmzfk1kgew1r].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0cc4alg1q4nxxa0zxmzfk1kgew1r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0cc4alg1q4nxxa0zxmzfk1kgew1r].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0cc4alg1q4nxxa0zxmzfk1kgew1r].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0cc4alg1q4nxxa0zxmzfk1kgew1r].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0cc4alg1q4nxxa0zxmzfk1kgew1r].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0cc4alg1q4nxxa0zxmzfk1kgew1r].[:Measure Names]' value='144' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
            <format attr='text-format' field='[federated.0cc4alg1q4nxxa0zxmzfk1kgew1r].[sum:DeathPercentage:qk]' value='n#,##0.0000;-#,##0.0000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='rows' value='#ffffff' />
            <format attr='border-style' value='solid' />
            <format attr='background-color' scope='cols' value='#c0c0c0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='background-color' value='#55aaff' />
            <format attr='band-color' scope='cols' value='#55aaff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0cc4alg1q4nxxa0zxmzfk1kgew1r].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7251380681991577' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0cc4alg1q4nxxa0zxmzfk1kgew1r].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{769D2353-6C85-478C-9D9B-766CF6EB9C47}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Each continent death</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TableauTable2)' name='federated.0gn98sz0ecm63n162fqrt029z2we' />
          </datasources>
          <datasource-dependencies datasource='federated.0gn98sz0ecm63n162fqrt029z2we'>
            <column caption='Continent Death' datatype='integer' name='[ContinentDeath]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[ContinentDeath]' derivation='Sum' name='[sum:ContinentDeath:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0gn98sz0ecm63n162fqrt029z2we].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0gn98sz0ecm63n162fqrt029z2we].[none:location:nk]' value='87' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0gn98sz0ecm63n162fqrt029z2we].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1974033117294312' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gn98sz0ecm63n162fqrt029z2we].[sum:ContinentDeath:qk]</rows>
        <cols>[federated.0gn98sz0ecm63n162fqrt029z2we].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{942F8363-2022-4E11-B08F-01C3EC6CBC68}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Precentage population infected per country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TableauTable3)' name='federated.0mqisty0957jm619bi98t01mgdoh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0mqisty0957jm619bi98t01mgdoh'>
            <column caption='Precentage Population Infected' datatype='real' name='[PrecentagePopulationInfected]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PrecentagePopulationInfected]' derivation='Sum' name='[sum:PrecentagePopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0mqisty0957jm619bi98t01mgdoh].[Longitude (generated)]' field-type='quantitative' max='40770187.171405502' min='-38940163.359864391' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0mqisty0957jm619bi98t01mgdoh].[Latitude (generated)]' field-type='quantitative' max='20264228.698269106' min='-8721354.1769394204' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0mqisty0957jm619bi98t01mgdoh].[sum:PrecentagePopulationInfected:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0mqisty0957jm619bi98t01mgdoh].[sum:PrecentagePopulationInfected:qk]' value='Precentage Population Infected'>
              <formatted-text>
                <run>Precentage Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0mqisty0957jm619bi98t01mgdoh].[none:location:nk]' />
              <color column='[federated.0mqisty0957jm619bi98t01mgdoh].[sum:PrecentagePopulationInfected:qk]' />
              <geometry column='[federated.0mqisty0957jm619bi98t01mgdoh].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mqisty0957jm619bi98t01mgdoh].[Latitude (generated)]</rows>
        <cols>[federated.0mqisty0957jm619bi98t01mgdoh].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0297B3A7-6F2A-4F4B-8A9B-0C8CF5C7A87A}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Precentage population infected </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TableauTable4)' name='federated.1cbqao51jer18919ba06j09sbda6' />
          </datasources>
          <datasource-dependencies datasource='federated.1cbqao51jer18919ba06j09sbda6'>
            <column caption='Precentage Population Infected' datatype='real' name='[PrecentagePopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PrecentagePopulationInfected]' derivation='Avg' name='[avg:PrecentagePopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cbqao51jer18919ba06j09sbda6].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1cbqao51jer18919ba06j09sbda6].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1cbqao51jer18919ba06j09sbda6].[none:location:nk]' />
              <text column='[federated.1cbqao51jer18919ba06j09sbda6].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1cbqao51jer18919ba06j09sbda6].[avg:PrecentagePopulationInfected:qk]</rows>
        <cols>[federated.1cbqao51jer18919ba06j09sbda6].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{0540405F-E7F1-491F-8044-1275AFF5C557}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='48649' id='8' param='horz' type-v2='layout-flow' w='98584' x='708' y='50000'>
            <zone fixed-size='439' h='48649' id='6' is-fixed='true' type-v2='layout-basic' w='38850' x='708' y='50000'>
              <zone h='48649' id='5' name='Sheet 2' w='38850' x='708' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone h='48649' id='12' name='Sheet 4' w='45575' x='39558' y='50000'>
              <layout-cache minwidth='152' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='160' h='48649' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='14159' x='85133' y='50000'>
              <zone h='10979' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.0mqisty0957jm619bi98t01mgdoh].[sum:PrecentagePopulationInfected:qk]' type-v2='color' w='14159' x='85133' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28040' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1cbqao51jer18919ba06j09sbda6].[none:location:nk]' type-v2='color' w='14159' x='85133' y='60979'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='37163' id='3' name='Sheet 1' w='40353' x='708' y='1351'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='48649' id='10' name='Sheet 3' w='58231' x='41061' y='1351'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='11486' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.0gn98sz0ecm63n162fqrt029z2we].[none:location:nk]' type-v2='color' w='40353' x='708' y='38514'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97298' id='20' param='vert' type-v2='layout-flow' w='98584' x='708' y='1351'>
                <zone fixed-size='280' h='37163' id='3' is-fixed='true' name='Sheet 1' w='40353' x='708' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48649' id='10' is-fixed='true' name='Sheet 3' w='58231' x='41061' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10979' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.0mqisty0957jm619bi98t01mgdoh].[sum:PrecentagePopulationInfected:qk]' type-v2='color' w='14159' x='85133' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48649' id='5' is-fixed='true' name='Sheet 2' w='38850' x='708' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11486' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.0gn98sz0ecm63n162fqrt029z2we].[none:location:nk]' type-v2='color' w='40353' x='708' y='38514'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48649' id='12' is-fixed='true' name='Sheet 4' w='45575' x='39558' y='50000'>
                  <layout-cache minwidth='152' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='28040' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1cbqao51jer18919ba06j09sbda6].[none:location:nk]' type-v2='color' w='14159' x='85133' y='60979'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{17FE4EC1-8C32-4F9C-8217-6F895D52AEE1}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cc4alg1q4nxxa0zxmzfk1kgew1r].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1FE1D659-A211-400F-9E8C-9A234C63BCC9}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gn98sz0ecm63n162fqrt029z2we].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gn98sz0ecm63n162fqrt029z2we].[none:location:nk]</field>
            <field>[federated.1cbqao51jer18919ba06j09sbda6].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2470E9E2-DD70-43A1-BEE8-3440DE11AF1A}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mqisty0957jm619bi98t01mgdoh].[sum:PrecentagePopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mqisty0957jm619bi98t01mgdoh].[none:location:nk]</field>
            <field>[federated.0mqisty0957jm619bi98t01mgdoh].[sum:PrecentagePopulationInfected:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{1FC1082C-5B3B-46F8-9F4A-E4A0C8E46860}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cbqao51jer18919ba06j09sbda6].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cbqao51jer18919ba06j09sbda6].[attr:location:nk]</field>
            <field>[federated.1cbqao51jer18919ba06j09sbda6].[none:location:nk]</field>
            <field>[federated.1cbqao51jer18919ba06j09sbda6].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{963D9019-51A3-4E8A-8881-5A970905CC26}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1cbqao51jer18919ba06j09sbda6].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{DB6D6484-424E-4EE9-AB25-238FEDB4AA2A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='44' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      EQdsegPvIwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      qShtnAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
